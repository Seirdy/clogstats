[tool.poetry]
name = "clogstats"
version = "0.1.0"
description = "Gather statistics from WeeChat log files"
readme = "README.md"
authors = ["Rohan Kumar <seirdy@protonmail.com>"]
homepage = "https://git.sr.ht/~seirdy/clogstats"
repository = "https://git.sr.ht/~seirdy/clogstats"
license = "AGPL-3.0-or-later"
include = ["LICENSE"]
keywords = ["IRC", "WeeChat", "timeseries", "data-analysis"]
classifiers = [
	"Development Status :: 2 - Pre-Alpha",
	'Environment :: Console',
	"Intended Audience :: Developers",
	"Natural Language :: English",
	"Programming Language :: Python :: Implementation :: CPython",
	"Programming Language :: Python :: Implementation :: PyPy",
	"Topic :: Communications :: Chat :: Internet Relay Chat",
	"Topic :: Scientific/Engineering :: Mathematics",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.6.1"
pandas = ">=0.25.3, <2.0.0"
dataclasses = {version = "^0.7", python = "~3.6"} # backport for python 3.6
u8darts = {version = "^0.2.2", optional = true}
typing_extensions = "^3.7.4"
scikit-learn = {version = "^0.22", optional = true}
pmdarima = {version = "^1.7", optional = true}

[tool.poetry.extras]
forecasting = ["u8darts", "scikit-learn", "pmdarima"]

[tool.poetry.scripts]
clogstats = "clogstats.cli:main"

[tool.poetry.dev-dependencies]
# formatters
black = "^19.10b0"
isort = {extras = ["pyproject"], version = "^4.3.21"}
# linters
flakehell = "^0.5.0"  # nice output for pylint + flake8, configured in pyproject.toml
flake8-docstrings = "^1.5.0"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.0"
safety = "^1.9.0"
pylint = "^2.5.3"
mypy = "^0.780"
pre-commit = "^2.5.1"  # run all formatting/linting/tests before each commit
pytest = "^5.4.3"
pytest-cov = "^2.10.0"
coverage = {extras = ["toml"], version = "^5.1"}
flake8-pytest-style = "^1.2.1"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.2.3"
flake8-mutable = "^1.2.0"
pandas-vet = "^0.2.2"
wemake-python-styleguide = "^0.14.0"
dlint = "^0.10.3"
flake8-variables-names = "^0.0.3"
flake8-strict = "^0.2.1"
flake8-class-attributes-order = "^0.1.1"
pyupgrade = "^2.6.2"
ipython = "^7.12.0"
line_profiler = "^3.0.2"
konch = "^4.2.2"
autoflake = "^1.3.1"
add-trailing-comma = "^2.0.1"

[tool.pylint.format]
max-line-length = "88"

[tool.flakehell]
format = "grouped"
max_line_length = 88
max_complexity = 6
max_arguments = 6
show_source = false
exclude = ["build", "dist", "*.egg-info", ".git", "ignore", ".cache", ".mypy_cache"]

[tool.flakehell.plugins]
dlint = ["+*"]
"flake8-*" = ["+*"]
flake8-docstrings = ["-D100", "-D104", "-D401"]
flake8-quotes = ["-*"]
flake8-darglint = ["-*"]  # will enable once I finally get around to RESTifying docstrings
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-E203", "-E501", "-W503"]  # black compliance
pyflakes = ["+*"]
pylint = [
	"+*", "-C0330", "-C0326", # black compliance
	"-R0913", # max-args is handled by wemake-python-styleguide
]
wemake-python-styleguide = [
	"+*",
	"-WPS226",  # string constant overuse: necessary for grabbing pandas columns
	"-WPS305",  # I like my f-strings
	"-WPS348",  # lines starting with a dot: inconsistent with black + pandas
	"-WPS306",  # pylint says we should prefer implicit inheritance from "object".
	"-WPS435",  # list multiplication is okay with numpy
]

[tool.flakehell.exceptions."clogstats/cli.py"]
wemake-python-styleguide = ["-WPS421"]  # the cli entrypoint should print

[tool.flakehell.exceptions."tests/"]
flake8-bandit = ["-S101"]
pylint = ["-C0116"]
wemake-python-styleguide = ["-WPS432"]  # magic numbers are okay in tests

[tool.flakehell.exceptions."clogstats/forecasting/ts_utils.py"]
# will break this up later
wemake-python-styleguide = ["-WPS202"]
[tool.flakehell.exceptions."clogstats/stats/gather_stats.py"]
# will fix by splitting off logfile discovery/path-handling into own file
wemake-python-styleguide = ["-WPS202", "-WPS235"]

[tool.isort]
line_length = 88
include_trailing_comma = true
# lines_after_imports = 2
# lines_between_types = 1
multi_line_output = 3
force_grid_wrap = 0
ensure_newline_before_comments = true
use_parentheses = true

src_paths = ["clogstats", "tests"]
exclude = ["build", "dist", "*.egg-info", ".git", "ignore", ".cache", ".mypy_cache", "ignore/"]
known_first_party = "clogstats"
known_third_party = [
	"numpy",
	"statsmodels",
	"darts",
	"pandas",
	"pytest",
]
known_standard_library = "dataclasses"  # use backport on py36, stdlib otherwise
profile = "black"

[tool.black]
target-version = ['py36', 'py37', 'py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
	| ignore
)/
'''

[tool.coverage.run]
include = ["clogstats/*"]
concurrency = ["multiprocessing"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
